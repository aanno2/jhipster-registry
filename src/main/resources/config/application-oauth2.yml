spring:
  security:
    oauth2:
      # Currently not needed: oauth2 client support
      client:
        registration:
          kcqs_zap:
            client-id: registry
            # client-secret: ${KEYCLOAK_CLIENT_SECRET_GRUNDLAGE}
            client-grand-type: authorization_code
            # redirect-uri:
            # scope:
          kcqs_pbdb:
            client-id: registry
            # client-secret: ${KEYCLOAK_CLIENT_SECRET_GRUNDLAGE}
            client-grand-type: authorization_code
            # redirect-uri:
            # scope:
        provider:
          kcqs_zap:
            issuer-uri: ${KEYCLOAK_BASE_URL}/auth/realms/zap
          kcqs_pbdb:
            issuer-uri: ${KEYCLOAK_BASE_URL}/auth/realms/pbdb
      resourceserver:
        jwt:
          # Normal configuration with OAuth2ResourceServerConfigurer (tp)
          issuer-uri: ${KEYCLOAK_BASE_URL}/auth/realms/zap
          # TODO tp: Currently not used for JwtDecoder (tp)
          # jwk-set-uri: ${KEYCLOAK_BASE_URL}/auth/realms/zap/protocol/openid-connect/certs
      additional:
        jwt:
          # Additional configurations with MultiRealmOAuth2ResourceServerConfigurer (tp)
          issuer-uris:
            - ${KEYCLOAK_BASE_URL}/auth/realms/pbdb

security:
  basic:
    enabled: false

server:
  servlet:
    session:
      cookie:
        http-only: true
        # custom session cookie name to prevent conflict with another application on the same domain
        name: JSESSIONID_REGISTRY
